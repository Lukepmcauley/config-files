"=====VIMrc======
"Luke McAuley
let mapleader = " "
set nocompatible              " be iMproved, required
"===== Vundle Plugins =======
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'bling/vim-airline'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'edkolev/tmuxline.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'derekwyatt/vim-scala'
Plugin 'tikhomirov/vim-glsl'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-eunuch'
"lugin 'klen/python-mode'
"lugin 'tpope/vim-repeat'
Plugin 'tpope/vim-fugitive.git'
Plugin 'vim-scripts/cscope.vim'
Plugin 'gorkunov/smartpairs.vim'
Plugin 'Yggdroot/indentLine'
Plugin 'dahu/Insertlessly'
" Plugin 'Valloric/youcompleteme'
Plugin 'scrooloose/nerdtree'
Plugin 'the-lambda-church/coquille'
Plugin 'def-lkb/vimbufsync'

call vundle#end()            " required
filetype plugin indent on    " required

"=======End of Vundle stuff ====

"======Plugin settings ====

"ctrlp.vim
set runtimepath^=~/.vim/bundle/ctrlp.vim

"vim-airline
let g:airline_powerline_fonts = 1
let g:airline_theme='powerlineish'
let g:airline#extensions#tabline#enabled = 0

"tmuxline
let g:tmuxline_preset = {
        \ 'a': '#S',
        \ 'win': '#I #W',
        \ 'cwin': '#I #W',
	\ 'x': '#(finger on:Edinburgh@graph.no | tail -n 1)',
        \ 'z': '%R',
        \ 'options': {
        \'status-justify': 'left'}
        \}

"pymode
let g:pymode_folding = 0
let g:pymode_rope_complete_on_dot = 0
let g:pep8_ignore="W0401"
let g:pymode_options_max_line_length = 79
let g:pymode_lint_cwindow = 1
let g:pymode_lint_on_fly = 1

"insertlessly
nmap <leader>o <Plug>OpenNewline

"nerdtree
map <leader>n :NERDTreeToggle<CR>

"""Cycle buffers
map <leader>k :CtrlPBuffer<CR>

""" Mappings
" Delete Buffer
map <leader>d :bd<Return>

"Open folds
map <leader>O zO
nmap <Leader>f :set fdm=syntax<CR>

map <leader>d "_d

""" Resize splits with arrow keys
noremap <Up> :res -5 <CR>
noremap <Down> :res +5 <CR>
noremap <Left> :vertical resize -5<CR>
noremap <Right> :vertical resize +5<CR>

nnoremap <silent> <leader>ch :set hlsearch!<CR>

"""cscope
if has("cscope")
    set csto=0
    set cst
    set nocsverb
    " add any database in current directory
    if filereadable("cscope.out")
        cs add cscope.out
    " else add database pointed to by environment
    else
        cs add ~/gensim/cscope.out
    endif
    set csverb
endif
""" colorscheme
syntax on
colorscheme molokai
set t_Co=256

""" Tab settings
" set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab
set tabstop=8  shiftwidth=4
"=====Search options
set hlsearch
set ignorecase
set smartcase
au FileType c,cpp setlocal comments-=:// comments+=f://
set wildmenu
set wildmode=longest:full,full
set laststatus=2
set confirm
set pastetoggle=<F2>
set ruler
set number
set clipboard=unnamedplus
set hidden
set noswapfile
set nowrap
set mouse=a
set scroll=5
hi MatchParen cterm=bold ctermbg=none ctermfg=magenta
"let loaded_matchparen = 1
let g:netrw_list_hide ='.*\.pyc$'
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>
set tags=tags;/

" Maps Coquille commands to <F2> (Undo), <F3> (Next), <F4> (ToCursor)
au FileType coq call coquille#FNMapping()
